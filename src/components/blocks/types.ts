import  {
    BlockType,
} from "../../helpers/blockRegistry.helpers"
import { BucketKeysNameType } from "../../bucket_keys"
  
export interface BlockContext<
    BlockTemplate,
    BlockType,
    PageVariables = unknown,
    BlockVariables = unknown
> {
    // unique identifier of the block, should be unique
    // for the whole survey
    id: string
    blockName: string
    // define the block implementation to use, defined in
    // `/src/core/helpers/blockRegistry.js`
    blockType: BlockType
    // URI of the block
    path: string
    // Unique identifier for the block's page
    pageId: string
    // GraphQL query for the block
    query: string
    // Template of the block, available templates being defined
    // in `/config/block_templates.yml`
    template: BlockTemplate
    // Injected variables for the block's page
    pageVariables: PageVariables
    // Injected variables for the block
    variables: BlockVariables
    enableExport: boolean
    showLegend: boolean
}

export interface Block {
    // site-wide id
    id?: string
    // a template from which to inherit its properties
    template: BlockTemplate;
    // the name of the block (used for titles, descriptions, etc.)
    blockName?: string;
    // the type of block (which component to use)
    blockType?: BlockType
    // the query used to populate the block's data
    query?: string;
    // key used to pick the block's data from the page's data | the path to use (from the query root) to access the block's data
    dataPath?: string
    // key used to pick bucket keys the name of the block's keys (used for legends, formatting data, etc.)
    bucketKeysName?: string
    // enable/disable block description
    showDescription?: boolean
    // which mode to use for generic bar charts
    mode?: "absolute" | "relative"
    // which unit to use for generic bar charts
    units?: "percentage" | "count"
    //Extra
    hidden?: boolean
    
    // BLOCK NOTE props and BLOCKTITLE props
    title?: React.ReactNode
    titleId?: string
    description?: React.ReactNode
    descriptionId?: string
    // TITLECONTENTS props
    titleLink?: string
    enableDescriptionMarkdown?: boolean
    // BLOCK Main props
    overrides?: Overrides
    showNote?: boolean
    showTitle?: boolean
    legendPosition?: string
    // whether to show the block's legend
    showLegend?: boolean
    // whether to try and translate
    translateData?: boolean
    // GraphQL query variables (handled by GraphQL)
    queryVariables?: string
    // block variables (compiled during sitemap generation)
    variables?: {
        // the block's parent page id
        pageId: Page['id']
    }
    enableExport?: boolean
    awards?: Array<Award>
    // sub path generated by graphql
    path?: string
    i18nName?: string
    colorVariant?: string
  
}

export interface BlockTemplate extends Block {
    
}
  
export type Overrides = {
    BlockTitle: string
}

export type Award = {
    id: string
    value: string
    name?: string
}

export type Variables = {
    pageId: string
    subject?: string
    heatMapId?: string
    sectionId?: string
    toolIds?: Array<string>

}